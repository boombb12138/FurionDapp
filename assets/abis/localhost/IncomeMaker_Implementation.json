{
  "address": "0x2544b5e5898A2CcF64B4bfB0D1a454152ef924C9",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EmergencyWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldProportion",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newProportion",
          "type": "uint256"
        }
      ],
      "name": "IncomeProportionChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "otherTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "incomeTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "name": "IncomeToToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newToken",
          "type": "address"
        }
      ],
      "name": "IncomeTokenChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "PRICE_SCALE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenB",
          "type": "address"
        }
      ],
      "name": "collectIncomeFromSwap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountIncome",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "contract IFurionSwapFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "incomeProportion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "incomeSharingVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "incomeToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_incomeToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "contract IFurionSwapV2Router",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_newIncomeProportion",
          "type": "uint8"
        }
      ],
      "name": "setIncomeProportion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newIncomeToken",
          "type": "address"
        }
      ],
      "name": "setIncomeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uint_MAX",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xa0d75bf7ea2795a208ce2e82cf9f2e3a8f268a5598d0f0f34bbc514584a73bc1",
  "receipt": {
    "to": null,
    "from": "0x1Be1A151BA3D24F594ee971dc9B843F23b5bA80E",
    "contractAddress": "0x2544b5e5898A2CcF64B4bfB0D1a454152ef924C9",
    "transactionIndex": 0,
    "gasUsed": "1292722",
    "logsBloom": "0x
    "blockHash": "0xcb7a51a5c855bbdcdba8612d669762db762f90b3219e4e450a949c6f0b332d0f",
    "transactionHash": "0xa0d75bf7ea2795a208ce2e82cf9f2e3a8f268a5598d0f0f34bbc514584a73bc1",
    "logs": [],
    "blockNumber": 13,
    "cumulativeGasUsed": "1292722",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "f71c7515d120a5406563342b21637eec",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldProportion\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newProportion\",\"type\":\"uint256\"}],\"name\":\"IncomeProportionChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"otherTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"incomeTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"IncomeToToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newToken\",\"type\":\"address\"}],\"name\":\"IncomeTokenChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PRICE_SCALE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"}],\"name\":\"collectIncomeFromSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIncome\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IFurionSwapFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incomeProportion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incomeSharingVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incomeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_incomeToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract IFurionSwapV2Router\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_newIncomeProportion\",\"type\":\"uint8\"}],\"name\":\"setIncomeProportion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newIncomeToken\",\"type\":\"address\"}],\"name\":\"setIncomeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uint_MAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectIncomeFromSwap(address,address)\":{\"params\":{\"_tokenA\":\"Address of tokenA for trading pair\",\"_tokenB\":\"Address of tokenB for trading pair\"},\"returns\":{\"amountIncome\":\"Amount of income collected\"}},\"emergencyWithdraw(address,uint256)\":{\"params\":{\"_amount\":\"Amount of the token\",\"_token\":\"Address of the token\"}},\"initialize(address,address,address,address)\":{\"params\":{\"_factory\":\"Address of the FurionSwap factory\",\"_incomeToken\":\"Address of income token, default by FUR\",\"_router\":\"Address of the FurionSwap router\",\"_vault\":\"Address of the income sharing vault\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectIncomeFromSwap(address,address)\":{\"notice\":\"Collect income from furion swap, turn token into incomeToken, and transfer to the incomeSharingVault\"},\"emergencyWithdraw(address,uint256)\":{\"notice\":\"Emergency withdraw by the owner\"},\"initialize(address,address,address,address)\":{\"notice\":\"Initialize function\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/income-sharing/IncomeMaker.sol\":\"IncomeMaker\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = _setInitializedVersion(1);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        bool isTopLevelCall = _setInitializedVersion(version);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(version);\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        _setInitializedVersion(type(uint8).max);\\n    }\\n\\n    function _setInitializedVersion(uint8 version) private returns (bool) {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, and for the lowest level\\n        // of initializers, because in other contexts the contract may have been reentered.\\n        if (_initializing) {\\n            require(\\n                version == 1 && !AddressUpgradeable.isContract(address(this)),\\n                \\\"Initializable: contract is already initialized\\\"\\n            );\\n            return false;\\n        } else {\\n            require(_initialized < version, \\\"Initializable: contract is already initialized\\\");\\n            _initialized = version;\\n            return true;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"contracts/furion-swap/interfaces/IFurionSwapFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.10;\\n\\ninterface IFurionSwapFactory {\\n\\n    function getPair(address _token0, address _token1)\\n        external\\n        view\\n        returns (address);\\n\\n    function isFurionPairs(address _token0, address _token1)\\n        external\\n        view\\n        returns (bool);\\n\\n    function createPair(address _token0, address _token1) external returns (address _pair);\\n\\n    function allPairs(uint) external view returns (address _pair);\\n    function allPairsLength() external view returns (uint);\\n\\n    function incomeMaker() external view returns (address);\\n\\n    function incomeMakerProportion() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x71c8e3577a6600e499692276186e502ea9fcc979492b08354f3d9c33c0165adc\",\"license\":\"MIT\"},\"contracts/furion-swap/interfaces/IFurionSwapPair.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IFurionSwapPair is IERC20 {\\n    \\n    function initialize(\\n        address _token0,\\n        address _token1\\n    ) external;\\n\\n    function factory() external view returns (address);\\n\\n    function token0() external view returns (address);\\n\\n    function token1() external view returns (address);\\n\\n    function feeRate() external view returns (uint256);\\n\\n    function deadline() external view returns (uint256);\\n\\n    function getReserves()\\n        external\\n        view\\n        returns (uint112 _reserve0, uint112 _reserve1);\\n\\n    function swap(\\n        uint256,\\n        uint256,\\n        address\\n    ) external;\\n\\n    function burn(address) external returns (uint256, uint256);\\n\\n    function mint(address) external returns (uint256);\\n\\n    function sync() external;\\n}\\n\",\"keccak256\":\"0xa9ec052863ce17d666a919405146a7df0b00641c718efaa136e481f90e0a2def\",\"license\":\"MIT\"},\"contracts/furion-swap/interfaces/IFurionSwapV2Router.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.10;\\n\\ninterface IFurionSwapV2Router {\\n    function factory() external view returns (address);\\n    function WETH() external view returns (address);\\n\\n    function addLiquidity(\\n        address _tokenA,\\n        address _tokenB,\\n        uint _amountADesired,\\n        uint _amountBDesired,\\n        uint _amountAMin,\\n        uint _amountBMin,\\n        address _to,\\n        uint _deadline\\n    ) external returns (uint _amountA, uint _amountB, uint _liquidity);\\n\\n    function addLiquidityETH(\\n        address _token,\\n        uint _amountTokenDesired,\\n        uint _amountTokenMin,\\n        uint _amountETHMin,\\n        address _to,\\n        uint _deadline\\n    ) external payable returns (uint _amountToken, uint _amountETH, uint _liquidity);\\n\\n    function removeLiquidity(\\n        address _tokenA,\\n        address _tokenB,\\n        uint _liquidity,\\n        uint _amountAMin,\\n        uint _amountBMin,\\n        address _to,\\n        uint _deadline\\n    ) external returns (uint _amountA, uint _amountB);\\n\\n    function removeLiquidityETH(\\n        address _token,\\n        uint _liquidity,\\n        uint _amountTokenMin,\\n        uint _amountETHMin,\\n        address _to,\\n        uint _deadline\\n    ) external returns (uint _amountToken, uint _amountETH);\\n\\n    function swapExactTokensForTokens(\\n        uint _amountIn,\\n        uint _amountOutMin,\\n        address[] calldata _path,\\n        address _to,\\n        uint _deadline\\n    ) external returns (uint[] memory _amounts);\\n\\n    function swapTokensForExactTokens(\\n        uint _amountOut,\\n        uint _amountInMax,\\n        address[] calldata _path,\\n        address _to,\\n        uint _deadline\\n    ) external returns (uint[] memory _amounts);\\n\\n    function swapExactETHForTokens(\\n        uint _amountOutMin,\\n        address[] calldata _path,\\n        address _to,\\n        uint _deadline\\n    ) external payable returns (uint[] memory _amounts);\\n\\n    function swapTokensForExactETH(\\n        uint _amountOut,\\n        uint _amountInMax,\\n        address[] calldata _path,\\n        address _to,\\n        uint _deadline\\n    ) external returns (uint[] memory _amounts);\\n\\n    function swapExactTokensForETH(\\n        uint _amountIn,\\n        uint _amountOutMin,\\n        address[] calldata _path,\\n        address _to,\\n        uint _deadline\\n    ) external returns (uint[] memory amounts);\\n\\n    function swapETHForExactTokens(\\n        uint _amountOut,\\n        address[] calldata _path,\\n        address _to,\\n        uint _deadline\\n    ) external payable returns (uint[] memory amounts);\\n}\\n\",\"keccak256\":\"0x6463fc44fb291719706aced834bc1c73403b9c2a051b249611868c0b4b32ad9c\",\"license\":\"MIT\"},\"contracts/income-sharing/IncomeMaker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.10;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"../furion-swap/interfaces/IFurionSwapFactory.sol\\\";\\nimport \\\"../furion-swap/interfaces/IFurionSwapPair.sol\\\";\\nimport \\\"../furion-swap/interfaces/IFurionSwapV2Router.sol\\\";\\n\\n/*\\n//===================================//\\n ______ _   _______ _____ _____ _   _ \\n |  ___| | | | ___ \\\\_   _|  _  | \\\\ | |\\n | |_  | | | | |_/ / | | | | | |  \\\\| |\\n |  _| | | | |    /  | | | | | | . ` |\\n | |   | |_| | |\\\\ \\\\ _| |_\\\\ \\\\_/ / |\\\\  |\\n \\\\_|    \\\\___/\\\\_| \\\\_|\\\\___/ \\\\___/\\\\_| \\\\_/\\n//===================================//\\n* /\\n\\n/**\\n * @title Furion Income Maker Contract\\n * @dev This contract will receive the transaction fee from swap pool\\n *      All tx fees will be converted into FUR firstly, then transfer to income maker vault\\n */\\ncontract IncomeMaker is OwnableUpgradeable {\\n    using SafeERC20 for IERC20;\\n\\n    // ---------------------------------------------------------------------------------------- //\\n    // ************************************* Constants **************************************** //\\n    // ---------------------------------------------------------------------------------------- //\\n\\n    uint public constant uint_MAX = type(uint).max;\\n    uint public constant PRICE_SCALE = 1e6;\\n\\n    // ---------------------------------------------------------------------------------------- //\\n    // ************************************* Variables **************************************** //\\n    // ---------------------------------------------------------------------------------------- //\\n\\n    IFurionSwapV2Router public router;\\n\\n    IFurionSwapFactory public factory;\\n\\n    address public incomeSharingVault;\\n\\n    // all income would be converted to one uniform token, default by FUR\\n    address public incomeToken;\\n\\n    // proportion allocated to income sharing vault, 0-100, 80 by default\\n    uint public incomeProportion;\\n\\n    // ---------------------------------------------------------------------------------------- //\\n    // *************************************** Events ***************************************** //\\n    // ---------------------------------------------------------------------------------------- //\\n    event IncomeTokenChanged(\\n        address oldToken,\\n        address newToken\\n    );\\n    event IncomeProportionChanged(\\n        uint oldProportion,\\n        uint newProportion\\n    );\\n\\n    event IncomeToToken(\\n        address otherTokenAddress,\\n        address incomeTokenAddress,\\n        uint amountIn,\\n        uint amountOut\\n    );\\n\\n    event EmergencyWithdraw(address token, uint amount);\\n\\n    // ---------------------------------------------------------------------------------------- //\\n    // ************************************* Constructor ************************************** //\\n    // ---------------------------------------------------------------------------------------- //\\n\\n    /**\\n     * @notice Initialize function\\n     * @param _incomeToken Address of income token, default by FUR\\n     * @param _router Address of the FurionSwap router\\n     * @param _factory Address of the FurionSwap factory\\n     * @param _vault Address of the income sharing vault\\n     */\\n    function initialize(\\n        address _incomeToken,\\n        address _router,\\n        address _factory,\\n        address _vault\\n    ) public initializer {\\n        __Ownable_init();\\n\\n        incomeToken = _incomeToken;\\n        router = IFurionSwapV2Router(_router);\\n        factory = IFurionSwapFactory(_factory);\\n\\n        incomeSharingVault = _vault;\\n\\n        incomeProportion = 80; // default by 80\\n    }\\n\\n    // ---------------------------------------------------------------------------------------- //\\n    // ************************************ Main Functions ************************************ //\\n    // ---------------------------------------------------------------------------------------- //\\n\\n    /**\\n     * @notice Collect income from furion swap, turn token into incomeToken, and transfer to the incomeSharingVault\\n     * @param _tokenA Address of tokenA for trading pair\\n     * @param _tokenB Address of tokenB for trading pair\\n     * @return amountIncome Amount of income collected\\n     */\\n    function collectIncomeFromSwap(address _tokenA, address _tokenB)\\n    external returns (uint amountIncome){\\n        // Get the pair\\n        IFurionSwapPair pair = IFurionSwapPair(\\n            factory.getPair(_tokenA, _tokenB));\\n        require(address(pair) != address(0), \\\"INCOME_MAKER: PAIR_NOT_EXIST\\\");\\n\\n        (address token0, address token1) = _tokenA < _tokenB\\n            ? (_tokenA, _tokenB)\\n            : (_tokenB, _tokenA);\\n\\n        // Transfer lp token to the pool and get two tokens\\n        IERC20(address(pair)).safeTransfer(\\n            address(pair),\\n            pair.balanceOf(address(this))\\n        );\\n\\n        // Directly call the pair to burn lp tokens\\n        (uint amount0, uint amount1) = pair.burn(address(this));\\n\\n        uint amountIncome0 = _convertIncome(token0, amount0);\\n        uint amountIncome1 = _convertIncome(token1, amount1);\\n\\n        amountIncome = amountIncome0 + amountIncome1;\\n\\n        // Transfer all incomeTokens to income sharing vault\\n        IERC20(incomeToken).safeTransfer(\\n            incomeSharingVault,\\n            IERC20(incomeToken).balanceOf(address(this)) * incomeProportion / 100\\n        );\\n    }\\n\\n    /**\\n     * @notice Emergency withdraw by the owner\\n     * @param _token Address of the token\\n     * @param _amount Amount of the token\\n     */\\n    function emergencyWithdraw(address _token, uint _amount)\\n        external\\n        onlyOwner\\n    {\\n        IERC20(_token).safeTransfer(msg.sender, _amount);\\n        emit EmergencyWithdraw(_token, _amount);\\n    }\\n\\n    // ---------------------------------------------------------------------------------------- //\\n    // ************************************ Set Functions ************************************* //\\n    // ---------------------------------------------------------------------------------------- //\\n\\n    function setIncomeToken(address _newIncomeToken) external onlyOwner {\\n        require(_newIncomeToken != address(0), \\\"INCOME_MAKER: ZERO_ADDRESS\\\");\\n        emit IncomeTokenChanged(incomeToken, _newIncomeToken);\\n\\n        incomeToken = _newIncomeToken;\\n    }\\n\\n    function setIncomeProportion(uint8 _newIncomeProportion) external onlyOwner {\\n        require(_newIncomeProportion <= 100, \\\"INCOME_MAKER: EXCEED_PROPORTION_RANGE\\\");\\n        emit IncomeProportionChanged(incomeProportion, _newIncomeProportion);\\n\\n        incomeProportion = _newIncomeProportion;\\n    }\\n\\n    // ---------------------------------------------------------------------------------------- //\\n    // *********************************** Internal Functions ********************************* //\\n    // ---------------------------------------------------------------------------------------- //\\n\\n    /**\\n     * @notice Convert the income to incomeToken and transfer to the incomeSharingVault\\n     * @param _otherToken Address of the other token\\n     */\\n    function _convertIncome(address _otherToken, uint _amountToken) internal returns (uint amountIncome){\\n        if(_otherToken != incomeToken){\\n            // Get the pair\\n            IFurionSwapPair pair = IFurionSwapPair(factory.getPair(_otherToken, incomeToken));\\n            require(address(pair) != address(0), \\\"INCOME_MAKER: PAIR_NOT_EXIST\\\");\\n\\n            amountIncome = _swap(\\n                _otherToken,\\n                _amountToken,\\n                address(this)\\n            );\\n\\n            emit IncomeToToken(_otherToken, incomeToken, _amountToken, amountIncome);\\n        }\\n    }\\n\\n    /**\\n     * @notice Swap other tokens to incomeToken\\n     * @param _otherToken Address of other token\\n     * @param _amount Amount of other token\\n     * @param _to Address of the receiver\\n     */\\n    function _swap(\\n        address _otherToken,\\n        uint _amount,\\n        address _to\\n    ) internal returns (uint amountOut) {\\n        // Get the pair\\n        IFurionSwapPair pair = IFurionSwapPair(\\n            factory.getPair(_otherToken, incomeToken)\\n        );\\n        require(address(pair) != address(0), \\\"INCOME_MAKER: PAIR_NOT_EXIST\\\");\\n\\n        (uint reserve0, uint reserve1) = pair.getReserves();\\n\\n        (uint reserveIn, uint reserveOut) = _otherToken < incomeToken\\n            ? (reserve0, reserve1)\\n            : (reserve1, reserve0);\\n\\n        uint feeRate = pair.feeRate();\\n\\n        // Calculate amountIn - fee\\n        uint amountInWithFee = _amount * (1000 - feeRate);\\n\\n        // Calculate amountOut\\n        amountOut =\\n            (amountInWithFee * reserveOut) /\\n            (reserveIn * 1000 + amountInWithFee);\\n\\n        // Transfer other token and swap\\n        IERC20(_otherToken).safeTransfer(address(pair), _amount);\\n\\n        (uint amount0Out, uint amount1Out) = _otherToken < incomeToken\\n            ? (uint(0), amountOut)\\n            : (amountOut, uint(0));\\n        pair.swap(amount0Out, amount1Out, _to);\\n    }\\n}\\n\",\"keccak256\":\"0x4f654ce421cbc449e527d85bfdda86856b4c8c8c877ca8518e5840747f3ee034\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611671806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063bc66ce0a11610097578063ecb72ffb11610066578063ecb72ffb146101ce578063f2fde38b146101e1578063f887ea40146101f4578063f8c8765e1461020757600080fd5b8063bc66ce0a1461018b578063bd8148421461019e578063c33f59d3146101b1578063c45a0155146101bb57600080fd5b8063715018a6116100d3578063715018a614610156578063730b86e21461015e5780638da5cb5b1461016757806395ccea671461017857600080fd5b80633516bd42146100fa578063436e667d1461011657806344224a841461012b575b600080fd5b61010360695481565b6040519081526020015b60405180910390f35b61012961012436600461137c565b61021a565b005b60675461013e906001600160a01b031681565b6040516001600160a01b03909116815260200161010d565b610129610339565b61010360001981565b6033546001600160a01b031661013e565b6101296101863660046113b4565b61039f565b60685461013e906001600160a01b031681565b6101296101ac3660046113e0565b610453565b610103620f424081565b60665461013e906001600160a01b031681565b6101036101dc3660046113fd565b610579565b6101296101ef3660046113e0565b610840565b60655461013e906001600160a01b031681565b610129610215366004611436565b610922565b6033546001600160a01b031633146102795760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60648160ff1611156102f35760405162461bcd60e51b815260206004820152602560248201527f494e434f4d455f4d414b45523a204558434545445f50524f504f5254494f4e5f60448201527f52414e47450000000000000000000000000000000000000000000000000000006064820152608401610270565b6069546040805191825260ff831660208301527fcd295070f1c6ae0c84d072d22354bea3b6bf1d4dec79122ec52302e2b89742a8910160405180910390a160ff16606955565b6033546001600160a01b031633146103935760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610270565b61039d60006109f7565b565b6033546001600160a01b031633146103f95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610270565b61040d6001600160a01b0383163383610a56565b604080516001600160a01b0384168152602081018390527f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695910160405180910390a15050565b6033546001600160a01b031633146104ad5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610270565b6001600160a01b0381166105035760405162461bcd60e51b815260206004820152601a60248201527f494e434f4d455f4d414b45523a205a45524f5f414444524553530000000000006044820152606401610270565b606854604080516001600160a01b03928316815291831660208301527fed7b14238643cc3a509981e2f90c566f7842da34511087535632d8b2e8a13995910160405180910390a16068805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60665460405163e6a4390560e01b81526001600160a01b0384811660048301528381166024830152600092839291169063e6a4390590604401602060405180830381865afa1580156105cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f39190611492565b90506001600160a01b03811661064b5760405162461bcd60e51b815260206004820152601c60248201527f494e434f4d455f4d414b45523a20504149525f4e4f545f4558495354000000006044820152606401610270565b600080846001600160a01b0316866001600160a01b03161061066e578486610671565b85855b6040516370a0823160e01b815230600482015291935091506106f59084906001600160a01b038216906370a0823190602401602060405180830381865afa1580156106c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e491906114af565b6001600160a01b0386169190610a56565b60405163226bf2d160e21b815230600482015260009081906001600160a01b038616906389afcb449060240160408051808303816000875af115801561073f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076391906114c8565b9150915060006107738584610ac2565b905060006107818584610ac2565b905061078d8183611502565b6067546069546068546040516370a0823160e01b8152306004820152939b50610833936001600160a01b03938416936064939216906370a0823190602401602060405180830381865afa1580156107e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080c91906114af565b610816919061151a565b6108209190611539565b6068546001600160a01b03169190610a56565b5050505050505092915050565b6033546001600160a01b0316331461089a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610270565b6001600160a01b0381166109165760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610270565b61091f816109f7565b50565b600061092e6001610c1a565b90508015610946576000805461ff0019166101001790555b61094e610d35565b606880546001600160a01b0380881673ffffffffffffffffffffffffffffffffffffffff199283161790925560658054878416908316179055606680548684169083161790556067805492851692909116919091179055605060695580156109f0576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b603380546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052610abd908490610da8565b505050565b6068546000906001600160a01b03848116911614610c145760665460685460405163e6a4390560e01b81526001600160a01b0386811660048301529182166024820152600092919091169063e6a4390590604401602060405180830381865afa158015610b33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b579190611492565b90506001600160a01b038116610baf5760405162461bcd60e51b815260206004820152601c60248201527f494e434f4d455f4d414b45523a20504149525f4e4f545f4558495354000000006044820152606401610270565b610bba848430610e8d565b606854604080516001600160a01b03808916825290921660208301528101859052606081018290529092507f8344388cfe5ad0701454f307530b263da2563c5d829476be8def9f18bc668a949060800160405180910390a1505b92915050565b60008054610100900460ff1615610ca8578160ff166001148015610c3d5750303b155b610ca05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610270565b506000919050565b60005460ff808416911610610d165760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610270565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff16610da05760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610270565b61039d61116e565b6000610dfd826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111e29092919063ffffffff16565b805190915015610abd5780806020019051810190610e1b919061155b565b610abd5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610270565b60665460685460405163e6a4390560e01b81526001600160a01b03868116600483015291821660248201526000928392169063e6a4390590604401602060405180830381865afa158015610ee5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f099190611492565b90506001600160a01b038116610f615760405162461bcd60e51b815260206004820152601c60248201527f494e434f4d455f4d414b45523a20504149525f4e4f545f4558495354000000006044820152606401610270565b600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b81526004016040805180830381865afa158015610fa1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc5919061159b565b6068546dffffffffffffffffffffffffffff92831694509116915060009081906001600160a01b03908116908a1610610fff578284611002565b83835b915091506000856001600160a01b031663978bbdb96040518163ffffffff1660e01b8152600401602060405180830381865afa158015611046573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106a91906114af565b9050600061107a826103e86115ce565b611084908b61151a565b905080611093856103e861151a565b61109d9190611502565b6110a7848361151a565b6110b19190611539565b97506110c76001600160a01b038c16888c610a56565b60685460009081906001600160a01b03908116908e16106110ea578960006110ee565b60008a5b6040516336cd320560e11b815260048101839052602481018290526001600160a01b038e81166044830152929450909250908a1690636d9a640a90606401600060405180830381600087803b15801561114657600080fd5b505af115801561115a573d6000803e3d6000fd5b505050505050505050505050509392505050565b600054610100900460ff166111d95760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610270565b61039d336109f7565b60606111f184846000856111fb565b90505b9392505050565b6060824710156112735760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610270565b6001600160a01b0385163b6112ca5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610270565b600080866001600160a01b031685876040516112e69190611615565b60006040518083038185875af1925050503d8060008114611323576040519150601f19603f3d011682016040523d82523d6000602084013e611328565b606091505b5091509150611338828286611343565b979650505050505050565b606083156113525750816111f4565b8251156113625782518084602001fd5b8160405162461bcd60e51b81526004016102709190611631565b60006020828403121561138e57600080fd5b813560ff811681146111f457600080fd5b6001600160a01b038116811461091f57600080fd5b600080604083850312156113c757600080fd5b82356113d28161139f565b946020939093013593505050565b6000602082840312156113f257600080fd5b81356111f48161139f565b6000806040838503121561141057600080fd5b823561141b8161139f565b9150602083013561142b8161139f565b809150509250929050565b6000806000806080858703121561144c57600080fd5b84356114578161139f565b935060208501356114678161139f565b925060408501356114778161139f565b915060608501356114878161139f565b939692955090935050565b6000602082840312156114a457600080fd5b81516111f48161139f565b6000602082840312156114c157600080fd5b5051919050565b600080604083850312156114db57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b60008219821115611515576115156114ec565b500190565b6000816000190483118215151615611534576115346114ec565b500290565b60008261155657634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561156d57600080fd5b815180151581146111f457600080fd5b80516dffffffffffffffffffffffffffff81168114610d3057600080fd5b600080604083850312156115ae57600080fd5b6115b78361157d565b91506115c56020840161157d565b90509250929050565b6000828210156115e0576115e06114ec565b500390565b60005b838110156116005781810151838201526020016115e8565b8381111561160f576000848401525b50505050565b600082516116278184602087016115e5565b9190910192915050565b60208152600082518060208401526116508160408501602087016115e5565b601f01601f1916919091016040019291505056fea164736f6c634300080d000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c8063bc66ce0a11610097578063ecb72ffb11610066578063ecb72ffb146101ce578063f2fde38b146101e1578063f887ea40146101f4578063f8c8765e1461020757600080fd5b8063bc66ce0a1461018b578063bd8148421461019e578063c33f59d3146101b1578063c45a0155146101bb57600080fd5b8063715018a6116100d3578063715018a614610156578063730b86e21461015e5780638da5cb5b1461016757806395ccea671461017857600080fd5b80633516bd42146100fa578063436e667d1461011657806344224a841461012b575b600080fd5b61010360695481565b6040519081526020015b60405180910390f35b61012961012436600461137c565b61021a565b005b60675461013e906001600160a01b031681565b6040516001600160a01b03909116815260200161010d565b610129610339565b61010360001981565b6033546001600160a01b031661013e565b6101296101863660046113b4565b61039f565b60685461013e906001600160a01b031681565b6101296101ac3660046113e0565b610453565b610103620f424081565b60665461013e906001600160a01b031681565b6101036101dc3660046113fd565b610579565b6101296101ef3660046113e0565b610840565b60655461013e906001600160a01b031681565b610129610215366004611436565b610922565b6033546001600160a01b031633146102795760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60648160ff1611156102f35760405162461bcd60e51b815260206004820152602560248201527f494e434f4d455f4d414b45523a204558434545445f50524f504f5254494f4e5f60448201527f52414e47450000000000000000000000000000000000000000000000000000006064820152608401610270565b6069546040805191825260ff831660208301527fcd295070f1c6ae0c84d072d22354bea3b6bf1d4dec79122ec52302e2b89742a8910160405180910390a160ff16606955565b6033546001600160a01b031633146103935760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610270565b61039d60006109f7565b565b6033546001600160a01b031633146103f95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610270565b61040d6001600160a01b0383163383610a56565b604080516001600160a01b0384168152602081018390527f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695910160405180910390a15050565b6033546001600160a01b031633146104ad5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610270565b6001600160a01b0381166105035760405162461bcd60e51b815260206004820152601a60248201527f494e434f4d455f4d414b45523a205a45524f5f414444524553530000000000006044820152606401610270565b606854604080516001600160a01b03928316815291831660208301527fed7b14238643cc3a509981e2f90c566f7842da34511087535632d8b2e8a13995910160405180910390a16068805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60665460405163e6a4390560e01b81526001600160a01b0384811660048301528381166024830152600092839291169063e6a4390590604401602060405180830381865afa1580156105cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f39190611492565b90506001600160a01b03811661064b5760405162461bcd60e51b815260206004820152601c60248201527f494e434f4d455f4d414b45523a20504149525f4e4f545f4558495354000000006044820152606401610270565b600080846001600160a01b0316866001600160a01b03161061066e578486610671565b85855b6040516370a0823160e01b815230600482015291935091506106f59084906001600160a01b038216906370a0823190602401602060405180830381865afa1580156106c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e491906114af565b6001600160a01b0386169190610a56565b60405163226bf2d160e21b815230600482015260009081906001600160a01b038616906389afcb449060240160408051808303816000875af115801561073f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076391906114c8565b9150915060006107738584610ac2565b905060006107818584610ac2565b905061078d8183611502565b6067546069546068546040516370a0823160e01b8152306004820152939b50610833936001600160a01b03938416936064939216906370a0823190602401602060405180830381865afa1580156107e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080c91906114af565b610816919061151a565b6108209190611539565b6068546001600160a01b03169190610a56565b5050505050505092915050565b6033546001600160a01b0316331461089a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610270565b6001600160a01b0381166109165760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610270565b61091f816109f7565b50565b600061092e6001610c1a565b90508015610946576000805461ff0019166101001790555b61094e610d35565b606880546001600160a01b0380881673ffffffffffffffffffffffffffffffffffffffff199283161790925560658054878416908316179055606680548684169083161790556067805492851692909116919091179055605060695580156109f0576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b603380546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052610abd908490610da8565b505050565b6068546000906001600160a01b03848116911614610c145760665460685460405163e6a4390560e01b81526001600160a01b0386811660048301529182166024820152600092919091169063e6a4390590604401602060405180830381865afa158015610b33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b579190611492565b90506001600160a01b038116610baf5760405162461bcd60e51b815260206004820152601c60248201527f494e434f4d455f4d414b45523a20504149525f4e4f545f4558495354000000006044820152606401610270565b610bba848430610e8d565b606854604080516001600160a01b03808916825290921660208301528101859052606081018290529092507f8344388cfe5ad0701454f307530b263da2563c5d829476be8def9f18bc668a949060800160405180910390a1505b92915050565b60008054610100900460ff1615610ca8578160ff166001148015610c3d5750303b155b610ca05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610270565b506000919050565b60005460ff808416911610610d165760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610270565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff16610da05760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610270565b61039d61116e565b6000610dfd826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111e29092919063ffffffff16565b805190915015610abd5780806020019051810190610e1b919061155b565b610abd5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610270565b60665460685460405163e6a4390560e01b81526001600160a01b03868116600483015291821660248201526000928392169063e6a4390590604401602060405180830381865afa158015610ee5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f099190611492565b90506001600160a01b038116610f615760405162461bcd60e51b815260206004820152601c60248201527f494e434f4d455f4d414b45523a20504149525f4e4f545f4558495354000000006044820152606401610270565b600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b81526004016040805180830381865afa158015610fa1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc5919061159b565b6068546dffffffffffffffffffffffffffff92831694509116915060009081906001600160a01b03908116908a1610610fff578284611002565b83835b915091506000856001600160a01b031663978bbdb96040518163ffffffff1660e01b8152600401602060405180830381865afa158015611046573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106a91906114af565b9050600061107a826103e86115ce565b611084908b61151a565b905080611093856103e861151a565b61109d9190611502565b6110a7848361151a565b6110b19190611539565b97506110c76001600160a01b038c16888c610a56565b60685460009081906001600160a01b03908116908e16106110ea578960006110ee565b60008a5b6040516336cd320560e11b815260048101839052602481018290526001600160a01b038e81166044830152929450909250908a1690636d9a640a90606401600060405180830381600087803b15801561114657600080fd5b505af115801561115a573d6000803e3d6000fd5b505050505050505050505050509392505050565b600054610100900460ff166111d95760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610270565b61039d336109f7565b60606111f184846000856111fb565b90505b9392505050565b6060824710156112735760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610270565b6001600160a01b0385163b6112ca5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610270565b600080866001600160a01b031685876040516112e69190611615565b60006040518083038185875af1925050503d8060008114611323576040519150601f19603f3d011682016040523d82523d6000602084013e611328565b606091505b5091509150611338828286611343565b979650505050505050565b606083156113525750816111f4565b8251156113625782518084602001fd5b8160405162461bcd60e51b81526004016102709190611631565b60006020828403121561138e57600080fd5b813560ff811681146111f457600080fd5b6001600160a01b038116811461091f57600080fd5b600080604083850312156113c757600080fd5b82356113d28161139f565b946020939093013593505050565b6000602082840312156113f257600080fd5b81356111f48161139f565b6000806040838503121561141057600080fd5b823561141b8161139f565b9150602083013561142b8161139f565b809150509250929050565b6000806000806080858703121561144c57600080fd5b84356114578161139f565b935060208501356114678161139f565b925060408501356114778161139f565b915060608501356114878161139f565b939692955090935050565b6000602082840312156114a457600080fd5b81516111f48161139f565b6000602082840312156114c157600080fd5b5051919050565b600080604083850312156114db57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b60008219821115611515576115156114ec565b500190565b6000816000190483118215151615611534576115346114ec565b500290565b60008261155657634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561156d57600080fd5b815180151581146111f457600080fd5b80516dffffffffffffffffffffffffffff81168114610d3057600080fd5b600080604083850312156115ae57600080fd5b6115b78361157d565b91506115c56020840161157d565b90509250929050565b6000828210156115e0576115e06114ec565b500390565b60005b838110156116005781810151838201526020016115e8565b8381111561160f576000848401525b50505050565b600082516116278184602087016115e5565b9190910192915050565b60208152600082518060208401526116508160408501602087016115e5565b601f01601f1916919091016040019291505056fea164736f6c634300080d000a",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "collectIncomeFromSwap(address,address)": {
        "params": {
          "_tokenA": "Address of tokenA for trading pair",
          "_tokenB": "Address of tokenB for trading pair"
        },
        "returns": {
          "amountIncome": "Amount of income collected"
        }
      },
      "emergencyWithdraw(address,uint256)": {
        "params": {
          "_amount": "Amount of the token",
          "_token": "Address of the token"
        }
      },
      "initialize(address,address,address,address)": {
        "params": {
          "_factory": "Address of the FurionSwap factory",
          "_incomeToken": "Address of income token, default by FUR",
          "_router": "Address of the FurionSwap router",
          "_vault": "Address of the income sharing vault"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "collectIncomeFromSwap(address,address)": {
        "notice": "Collect income from furion swap, turn token into incomeToken, and transfer to the incomeSharingVault"
      },
      "emergencyWithdraw(address,uint256)": {
        "notice": "Emergency withdraw by the owner"
      },
      "initialize(address,address,address,address)": {
        "notice": "Initialize function"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 130,
        "contract": "contracts/income-sharing/IncomeMaker.sol:IncomeMaker",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 133,
        "contract": "contracts/income-sharing/IncomeMaker.sol:IncomeMaker",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 719,
        "contract": "contracts/income-sharing/IncomeMaker.sol:IncomeMaker",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/income-sharing/IncomeMaker.sol:IncomeMaker",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 122,
        "contract": "contracts/income-sharing/IncomeMaker.sol:IncomeMaker",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 10710,
        "contract": "contracts/income-sharing/IncomeMaker.sol:IncomeMaker",
        "label": "router",
        "offset": 0,
        "slot": "101",
        "type": "t_contract(IFurionSwapV2Router)10683"
      },
      {
        "astId": 10713,
        "contract": "contracts/income-sharing/IncomeMaker.sol:IncomeMaker",
        "label": "factory",
        "offset": 0,
        "slot": "102",
        "type": "t_contract(IFurionSwapFactory)10413"
      },
      {
        "astId": 10715,
        "contract": "contracts/income-sharing/IncomeMaker.sol:IncomeMaker",
        "label": "incomeSharingVault",
        "offset": 0,
        "slot": "103",
        "type": "t_address"
      },
      {
        "astId": 10717,
        "contract": "contracts/income-sharing/IncomeMaker.sol:IncomeMaker",
        "label": "incomeToken",
        "offset": 0,
        "slot": "104",
        "type": "t_address"
      },
      {
        "astId": 10719,
        "contract": "contracts/income-sharing/IncomeMaker.sol:IncomeMaker",
        "label": "incomeProportion",
        "offset": 0,
        "slot": "105",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IFurionSwapFactory)10413": {
        "encoding": "inplace",
        "label": "contract IFurionSwapFactory",
        "numberOfBytes": "20"
      },
      "t_contract(IFurionSwapV2Router)10683": {
        "encoding": "inplace",
        "label": "contract IFurionSwapV2Router",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}
